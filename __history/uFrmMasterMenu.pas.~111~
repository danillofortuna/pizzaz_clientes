unit uFrmMasterMenu;

interface

uses
  Winapi.Windows, Winapi.Messages, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls,
  Vcl.Imaging.jpeg, Vcl.Imaging.pngimage, Vcl.Buttons, Vcl.Mask, System.Actions,
  Vcl.ActnList, uDM, uFrmBackup, System.IniFiles, Winapi.ShellAPI;

type
  TFrmMasterMenu = class(TForm)
    pnlPessoas: TPanel;
    imgLogo: TImage;
    pnlTopo: TPanel;
    cbbFormsPessoas: TComboBox;
    imgFundo: TImage;
    lblRise: TLabel;
    btnClientes: TSpeedButton;
    pnlPesRight: TPanel;
    btnFechar: TSpeedButton;
    btnRelatorio: TSpeedButton;
    edtPesquisa: TMaskEdit;
    actlstMenu: TActionList;
    actBuscaRapida: TAction;
    btnBackup: TSpeedButton;
    procedure FormShow(Sender: TObject);
    procedure MostraForm(formulario : TForm; cbTelas : tComboBox);
    procedure FechaForm(formulario : TForm;cbTelas : TComboBox);
    procedure btnFinalizarClick(Sender: TObject);
    procedure cbbFormsPessoasChange(Sender: TObject);
    procedure btnClientesClick(Sender: TObject);
    procedure btnFecharClick(Sender: TObject);
    procedure btnRelatorioClick(Sender: TObject);
    procedure edtPesquisaKeyPress(Sender: TObject; var Key: Char);
    procedure actBuscaRapidaExecute(Sender: TObject);
    procedure btnBackupClick(Sender: TObject);

  private
    function CreateProcessSimple(cmd: string): boolean;
    { Private declarations }
  public
    lado : integer;
    { Public declarations }
  end;

var
  FrmMasterMenu: TFrmMasterMenu;

implementation

uses
  uFrmCadClientes, uFrmFicha, System.SysUtils;

{$R *.dfm}

procedure TFrmMasterMenu.actBuscaRapidaExecute(Sender: TObject);
begin
  edtPesquisa.Clear;
  edtPesquisa.SetFocus;
end;

procedure TFrmMasterMenu.btnBackupClick(Sender: TObject);
var
  comando : string;
begin
  comando := (ExtractFilePath(Application.ExeName)+'BKP.BAT');
  WinExec(PAnsiChar(comando),SW_SHOW);
   Application.MessageBox('Backup Realizado!', 'Processo Concluído',
     MB_OK + MB_ICONINFORMATION);
end;

procedure TFrmMasterMenu.btnClientesClick(Sender: TObject);
begin
  if FrmCadClientes = nil then
  begin
    FrmCadClientes := TFrmCadClientes.Create(self);
  end;
  MostraForm(FrmCadClientes, cbbFormsPessoas);
end;

procedure TFrmMasterMenu.btnFecharClick(Sender: TObject);
begin
  dm.conMysql.Close;
  Close;
end;

procedure TFrmMasterMenu.btnFinalizarClick(Sender: TObject);
begin
 Close;
end;

procedure TFrmMasterMenu.btnRelatorioClick(Sender: TObject);
begin
  Application.MessageBox('Este módulo não foi implementado.' + #13#10 +
    'Para solicitar entre em contato:' + #13#10 +
    '''rise@risetecnologia.com''', 'RISE', MB_OK + MB_ICONINFORMATION);

end;

procedure TFrmMasterMenu.cbbFormsPessoasChange(Sender: TObject);
var
  i : integer;
begin
  for I := 0 to MDIChildCount-1 do
  begin
    if MDIChildren[i].Hint = cbbFormsPessoas.text then
    begin
      MDIChildren[i].BringToFront;
    end;

  end;
end;

procedure TFrmMasterMenu.edtPesquisaKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
  begin
    if edtPesquisa.Text <> '(  )    -    ' then
    begin
      if FrmFicha = nil then
      begin
        frmFicha := TfrmFicha.Create(self);
      end;
      frmFicha.qryMaster.Close;
      frmFicha.qryMaster.SQL.Clear;
      frmFicha.qryMaster.SQL.Add('SELECT id,        ');
      frmFicha.qryMaster.SQL.Add('     nome,        ');
      frmFicha.qryMaster.SQL.Add('     rua,         ');
      frmFicha.qryMaster.SQL.Add('     quadra,      ');
      frmFicha.qryMaster.SQL.Add('     lote,        ');
      frmFicha.qryMaster.SQL.Add('     setor,       ');
      frmFicha.qryMaster.SQL.Add('     edificio,    ');
      frmFicha.qryMaster.SQL.Add('     apartamento, ');
      frmFicha.qryMaster.SQL.Add('     bloco,       ');
      frmFicha.qryMaster.SQL.Add('     telefone,    ');
      frmFicha.qryMaster.SQL.Add('     referencia   ');
      frmFicha.qryMaster.SQL.Add('FROM   clientes   ');
      frmFicha.qryMaster.SQL.Add('WHERE telefone = '+quotedstr(edtPesquisa.Text));
      frmFicha.qryMaster.Open();
      if frmFicha.qryMaster.IsEmpty then
      begin
        Application.MessageBox('Não existe cadastro com este telefone.',
          'Atenção', MB_OK + MB_ICONWARNING);

      end
      else
      begin
        frmFicha.ShowModal;
      end;

    end;
    edtPesquisa.Text :='(  )    -    ';
  end;
end;

function TFrmMasterMenu.CreateProcessSimple(cmd: string):boolean;
var SUInfo:  TStartupInfo;
   ProcInfo: TProcessInformation;
begin
   FillChar(SUInfo, SizeOf(SUInfo), #0);
   SUInfo.cb      := SizeOf(SUInfo);
   SUInfo.dwFlags := STARTF_USESHOWWINDOW;
   SUInfo.wShowWindow := SW_HIDE;
   result := CreateProcess(nil, PChar(cmd), nil, nil, false, CREATE_NEW_CONSOLE or NORMAL_PRIORITY_CLASS, nil, nil, SUInfo, ProcInfo);
   if result then
   begin
      WaitForSingleObject(ProcInfo.hProcess, INFINITE);
      CloseHandle(ProcInfo.hProcess);
      CloseHandle(ProcInfo.hThread);
   end;
end;


procedure TFrmMasterMenu.FechaForm(formulario: TForm;cbTelas : TComboBox);
begin
  cbTelas.Items.Delete(cbTelas.Items.IndexOf(formulario.Hint));
  formulario.Close;
end;

procedure TFrmMasterMenu.FormShow(Sender: TObject);
begin
  self.Left   :=  0;
  self.Top    :=  0;
  self.width  :=  Screen.WorkAreawidth;
  self.Height :=  Screen.WorkAreaHeight;
end;

procedure TFrmMasterMenu.MostraForm(formulario: TForm;cbTelas : tComboBox);
begin
  if cbTelas.Items[cbTelas.Items.IndexOf(formulario.Hint)].IsEmpty then
  begin
    cbTelas.Items.Add(formulario.Hint);
  end;
  //LockWindow para testar melhor visualização na criação do form.
  //Sem que o usuário veja o mesmo ser redimensionado ao aparecer

  LockWindowUpdate(Handle);
  formulario.Show;
  LockWindowUpdate(0);
end;

end.
